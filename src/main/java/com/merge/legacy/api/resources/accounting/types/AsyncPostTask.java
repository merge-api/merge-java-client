/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.legacy.api.resources.accounting.types;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.merge.api.core.ObjectMappers;
import org.jetbrains.annotations.NotNull;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AsyncPostTask.Builder.class)
public final class AsyncPostTask {
    private final AsyncPostTaskStatus status;

    private final AsyncPostTaskResult result;

    private final Map<String, Object> additionalProperties;

    private AsyncPostTask(
            AsyncPostTaskStatus status, AsyncPostTaskResult result, Map<String, Object> additionalProperties) {
        this.status = status;
        this.result = result;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("status")
    public AsyncPostTaskStatus getStatus() {
        return status;
    }

    @JsonProperty("result")
    public AsyncPostTaskResult getResult() {
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AsyncPostTask && equalTo((AsyncPostTask) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AsyncPostTask other) {
        return status.equals(other.status) && result.equals(other.result);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.status, this.result);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static StatusStage builder() {
        return new Builder();
    }

    public interface StatusStage {
        ResultStage status(@NotNull AsyncPostTaskStatus status);

        Builder from(AsyncPostTask other);
    }

    public interface ResultStage {
        _FinalStage result(@NotNull AsyncPostTaskResult result);
    }

    public interface _FinalStage {
        AsyncPostTask build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements StatusStage, ResultStage, _FinalStage {
        private AsyncPostTaskStatus status;

        private AsyncPostTaskResult result;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(AsyncPostTask other) {
            status(other.getStatus());
            result(other.getResult());
            return this;
        }

        @Override
        @JsonSetter("status")
        public ResultStage status(@NotNull AsyncPostTaskStatus status) {
            this.status = status;
            return this;
        }

        @Override
        @JsonSetter("result")
        public _FinalStage result(@NotNull AsyncPostTaskResult result) {
            this.result = result;
            return this;
        }

        @Override
        public AsyncPostTask build() {
            return new AsyncPostTask(status, result, additionalProperties);
        }
    }
}
