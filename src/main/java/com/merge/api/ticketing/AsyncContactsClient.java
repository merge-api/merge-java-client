/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.ticketing;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.ticketing.types.Contact;
import com.merge.api.ticketing.types.ContactsListRequest;
import com.merge.api.ticketing.types.ContactsRetrieveRequest;
import com.merge.api.ticketing.types.MetaResponse;
import com.merge.api.ticketing.types.PaginatedContactList;
import com.merge.api.ticketing.types.TicketingContactEndpointRequest;
import com.merge.api.ticketing.types.TicketingContactResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncContactsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawContactsClient rawClient;

    public AsyncContactsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawContactsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawContactsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Contact</code> objects.
     */
    public CompletableFuture<PaginatedContactList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Contact</code> objects.
     */
    public CompletableFuture<PaginatedContactList> list(ContactsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Contact</code> objects.
     */
    public CompletableFuture<PaginatedContactList> list(ContactsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Contact</code> object with the given values.
     */
    public CompletableFuture<TicketingContactResponse> create(TicketingContactEndpointRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Contact</code> object with the given values.
     */
    public CompletableFuture<TicketingContactResponse> create(
            TicketingContactEndpointRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Contact</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Contact> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Contact</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Contact> retrieve(String id, ContactsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Contact</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Contact> retrieve(
            String id, ContactsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>TicketingContact</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve() {
        return this.rawClient.metaPostRetrieve().thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>TicketingContact</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve(RequestOptions requestOptions) {
        return this.rawClient.metaPostRetrieve(requestOptions).thenApply(response -> response.body());
    }
}
