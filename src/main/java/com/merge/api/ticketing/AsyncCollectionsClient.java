/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.ticketing;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.ticketing.types.Collection;
import com.merge.api.ticketing.types.CollectionsListRequest;
import com.merge.api.ticketing.types.CollectionsRetrieveRequest;
import com.merge.api.ticketing.types.CollectionsViewersListRequest;
import com.merge.api.ticketing.types.PaginatedCollectionList;
import com.merge.api.ticketing.types.PaginatedViewerList;
import java.util.concurrent.CompletableFuture;

public class AsyncCollectionsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCollectionsClient rawClient;

    public AsyncCollectionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCollectionsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCollectionsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Collection</code> objects.
     */
    public CompletableFuture<PaginatedCollectionList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Collection</code> objects.
     */
    public CompletableFuture<PaginatedCollectionList> list(CollectionsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Collection</code> objects.
     */
    public CompletableFuture<PaginatedCollectionList> list(
            CollectionsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Viewer</code> objects that point to a User id or Team id that is either an assignee or viewer on a <code>Collection</code> with the given id. <a href="https://help.merge.dev/en/articles/10333658-ticketing-access-control-list-acls">Learn more.</a>
     */
    public CompletableFuture<PaginatedViewerList> viewersList(String collectionId) {
        return this.rawClient.viewersList(collectionId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Viewer</code> objects that point to a User id or Team id that is either an assignee or viewer on a <code>Collection</code> with the given id. <a href="https://help.merge.dev/en/articles/10333658-ticketing-access-control-list-acls">Learn more.</a>
     */
    public CompletableFuture<PaginatedViewerList> viewersList(
            String collectionId, CollectionsViewersListRequest request) {
        return this.rawClient.viewersList(collectionId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Viewer</code> objects that point to a User id or Team id that is either an assignee or viewer on a <code>Collection</code> with the given id. <a href="https://help.merge.dev/en/articles/10333658-ticketing-access-control-list-acls">Learn more.</a>
     */
    public CompletableFuture<PaginatedViewerList> viewersList(
            String collectionId, CollectionsViewersListRequest request, RequestOptions requestOptions) {
        return this.rawClient.viewersList(collectionId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Collection</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Collection> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Collection</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Collection> retrieve(String id, CollectionsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Collection</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Collection> retrieve(
            String id, CollectionsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }
}
