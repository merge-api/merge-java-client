/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.ticketing;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.core.SyncPagingIterable;
import com.merge.api.ticketing.types.Project;
import com.merge.api.ticketing.types.ProjectsListRequest;
import com.merge.api.ticketing.types.ProjectsRetrieveRequest;
import com.merge.api.ticketing.types.ProjectsUsersListRequest;
import com.merge.api.ticketing.types.User;

public class ProjectsClient {
    protected final ClientOptions clientOptions;

    private final RawProjectsClient rawClient;

    public ProjectsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawProjectsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawProjectsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public SyncPagingIterable<Project> list() {
        return this.rawClient.list().body();
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public SyncPagingIterable<Project> list(ProjectsListRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public SyncPagingIterable<Project> list(ProjectsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public Project retrieve(String id) {
        return this.rawClient.retrieve(id).body();
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public Project retrieve(String id, ProjectsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).body();
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public Project retrieve(String id, ProjectsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).body();
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public SyncPagingIterable<User> usersList(String parentId) {
        return this.rawClient.usersList(parentId).body();
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public SyncPagingIterable<User> usersList(String parentId, ProjectsUsersListRequest request) {
        return this.rawClient.usersList(parentId, request).body();
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public SyncPagingIterable<User> usersList(
            String parentId, ProjectsUsersListRequest request, RequestOptions requestOptions) {
        return this.rawClient.usersList(parentId, request, requestOptions).body();
    }
}
