/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.filestorage;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.filestorage.types.Issue;
import com.merge.api.filestorage.types.IssuesListRequest;
import com.merge.api.filestorage.types.PaginatedIssueList;
import java.util.concurrent.CompletableFuture;

public class AsyncIssuesClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawIssuesClient rawClient;

    public AsyncIssuesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawIssuesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawIssuesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Gets all issues for Organization.
     */
    public CompletableFuture<PaginatedIssueList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Gets all issues for Organization.
     */
    public CompletableFuture<PaginatedIssueList> list(IssuesListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Gets all issues for Organization.
     */
    public CompletableFuture<PaginatedIssueList> list(IssuesListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get a specific issue.
     */
    public CompletableFuture<Issue> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Get a specific issue.
     */
    public CompletableFuture<Issue> retrieve(String id, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, requestOptions).thenApply(response -> response.body());
    }
}
