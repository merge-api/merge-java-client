/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.filestorage;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.filestorage.types.AsyncPassthroughReciept;
import com.merge.api.filestorage.types.AsyncPassthroughRetrieveResponse;
import com.merge.api.filestorage.types.DataPassthroughRequest;
import java.util.concurrent.CompletableFuture;

public class AsyncAsyncPassthroughClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawAsyncPassthroughClient rawClient;

    public AsyncAsyncPassthroughClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawAsyncPassthroughClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawAsyncPassthroughClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Asynchronously pull data from an endpoint not currently supported by Merge.
     */
    public CompletableFuture<AsyncPassthroughReciept> create(DataPassthroughRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Asynchronously pull data from an endpoint not currently supported by Merge.
     */
    public CompletableFuture<AsyncPassthroughReciept> create(
            DataPassthroughRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves data from earlier async-passthrough POST request
     */
    public CompletableFuture<AsyncPassthroughRetrieveResponse> retrieve(String asyncPassthroughReceiptId) {
        return this.rawClient.retrieve(asyncPassthroughReceiptId).thenApply(response -> response.body());
    }

    /**
     * Retrieves data from earlier async-passthrough POST request
     */
    public CompletableFuture<AsyncPassthroughRetrieveResponse> retrieve(
            String asyncPassthroughReceiptId, RequestOptions requestOptions) {
        return this.rawClient
                .retrieve(asyncPassthroughReceiptId, requestOptions)
                .thenApply(response -> response.body());
    }
}
