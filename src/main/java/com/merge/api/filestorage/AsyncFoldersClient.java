/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.filestorage;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.filestorage.types.FileStorageFolderEndpointRequest;
import com.merge.api.filestorage.types.FileStorageFolderResponse;
import com.merge.api.filestorage.types.Folder;
import com.merge.api.filestorage.types.FoldersListRequest;
import com.merge.api.filestorage.types.FoldersRetrieveRequest;
import com.merge.api.filestorage.types.MetaResponse;
import com.merge.api.filestorage.types.PaginatedFolderList;
import java.util.concurrent.CompletableFuture;

public class AsyncFoldersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawFoldersClient rawClient;

    public AsyncFoldersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawFoldersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawFoldersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Folder</code> objects.
     */
    public CompletableFuture<PaginatedFolderList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Folder</code> objects.
     */
    public CompletableFuture<PaginatedFolderList> list(FoldersListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Folder</code> objects.
     */
    public CompletableFuture<PaginatedFolderList> list(FoldersListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Folder</code> object with the given values.
     */
    public CompletableFuture<FileStorageFolderResponse> create(FileStorageFolderEndpointRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Folder</code> object with the given values.
     */
    public CompletableFuture<FileStorageFolderResponse> create(
            FileStorageFolderEndpointRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Folder</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Folder> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Folder</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Folder> retrieve(String id, FoldersRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Folder</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Folder> retrieve(
            String id, FoldersRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>FileStorageFolder</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve() {
        return this.rawClient.metaPostRetrieve().thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>FileStorageFolder</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve(RequestOptions requestOptions) {
        return this.rawClient.metaPostRetrieve(requestOptions).thenApply(response -> response.body());
    }
}
