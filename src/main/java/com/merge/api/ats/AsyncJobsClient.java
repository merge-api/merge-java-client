/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.ats;

import com.merge.api.ats.types.Job;
import com.merge.api.ats.types.JobsListRequest;
import com.merge.api.ats.types.JobsRetrieveRequest;
import com.merge.api.ats.types.JobsScreeningQuestionsListRequest;
import com.merge.api.ats.types.PaginatedJobList;
import com.merge.api.ats.types.PaginatedScreeningQuestionList;
import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import java.util.concurrent.CompletableFuture;

public class AsyncJobsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawJobsClient rawClient;

    public AsyncJobsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawJobsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawJobsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Job</code> objects.
     */
    public CompletableFuture<PaginatedJobList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Job</code> objects.
     */
    public CompletableFuture<PaginatedJobList> list(JobsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Job</code> objects.
     */
    public CompletableFuture<PaginatedJobList> list(JobsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Job</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Job> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Job</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Job> retrieve(String id, JobsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Job</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Job> retrieve(String id, JobsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>ScreeningQuestion</code> objects.
     */
    public CompletableFuture<PaginatedScreeningQuestionList> screeningQuestionsList(String jobId) {
        return this.rawClient.screeningQuestionsList(jobId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>ScreeningQuestion</code> objects.
     */
    public CompletableFuture<PaginatedScreeningQuestionList> screeningQuestionsList(
            String jobId, JobsScreeningQuestionsListRequest request) {
        return this.rawClient.screeningQuestionsList(jobId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>ScreeningQuestion</code> objects.
     */
    public CompletableFuture<PaginatedScreeningQuestionList> screeningQuestionsList(
            String jobId, JobsScreeningQuestionsListRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .screeningQuestionsList(jobId, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
