/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.ats;

import com.merge.api.ats.types.Department;
import com.merge.api.ats.types.DepartmentsListRequest;
import com.merge.api.ats.types.DepartmentsRetrieveRequest;
import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.core.SyncPagingIterable;
import java.util.concurrent.CompletableFuture;

public class AsyncDepartmentsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawDepartmentsClient rawClient;

    public AsyncDepartmentsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawDepartmentsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawDepartmentsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Department</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Department>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Department</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Department>> list(DepartmentsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Department</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Department>> list(
            DepartmentsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Department</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Department> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Department</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Department> retrieve(String id, DepartmentsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Department</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Department> retrieve(
            String id, DepartmentsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }
}
