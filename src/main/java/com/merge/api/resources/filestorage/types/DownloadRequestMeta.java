/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.filestorage.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.merge.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DownloadRequestMeta.Builder.class)
public final class DownloadRequestMeta {
    private final String id;

    private final String url;

    private final String method;

    private final Map<String, JsonNode> headers;

    private final Map<String, JsonNode> body;

    private final Map<String, Object> additionalProperties;

    private DownloadRequestMeta(
            String id,
            String url,
            String method,
            Map<String, JsonNode> headers,
            Map<String, JsonNode> body,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.url = url;
        this.method = method;
        this.headers = headers;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("url")
    public String getUrl() {
        return url;
    }

    @JsonProperty("method")
    public String getMethod() {
        return method;
    }

    @JsonProperty("headers")
    public Map<String, JsonNode> getHeaders() {
        return headers;
    }

    @JsonProperty("body")
    public Map<String, JsonNode> getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DownloadRequestMeta && equalTo((DownloadRequestMeta) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DownloadRequestMeta other) {
        return id.equals(other.id)
                && url.equals(other.url)
                && method.equals(other.method)
                && headers.equals(other.headers)
                && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.url, this.method, this.headers, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        UrlStage id(@NotNull String id);

        Builder from(DownloadRequestMeta other);
    }

    public interface UrlStage {
        MethodStage url(@NotNull String url);
    }

    public interface MethodStage {
        _FinalStage method(@NotNull String method);
    }

    public interface _FinalStage {
        DownloadRequestMeta build();

        _FinalStage headers(Map<String, JsonNode> headers);

        _FinalStage putAllHeaders(Map<String, JsonNode> headers);

        _FinalStage headers(String key, JsonNode value);

        _FinalStage body(Map<String, JsonNode> body);

        _FinalStage putAllBody(Map<String, JsonNode> body);

        _FinalStage body(String key, JsonNode value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, UrlStage, MethodStage, _FinalStage {
        private String id;

        private String url;

        private String method;

        private Map<String, JsonNode> body = new LinkedHashMap<>();

        private Map<String, JsonNode> headers = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DownloadRequestMeta other) {
            id(other.getId());
            url(other.getUrl());
            method(other.getMethod());
            headers(other.getHeaders());
            body(other.getBody());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public UrlStage id(@NotNull String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("url")
        public MethodStage url(@NotNull String url) {
            this.url = url;
            return this;
        }

        @java.lang.Override
        @JsonSetter("method")
        public _FinalStage method(@NotNull String method) {
            this.method = method;
            return this;
        }

        @java.lang.Override
        public _FinalStage body(String key, JsonNode value) {
            this.body.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllBody(Map<String, JsonNode> body) {
            this.body.putAll(body);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "body", nulls = Nulls.SKIP)
        public _FinalStage body(Map<String, JsonNode> body) {
            this.body.clear();
            this.body.putAll(body);
            return this;
        }

        @java.lang.Override
        public _FinalStage headers(String key, JsonNode value) {
            this.headers.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllHeaders(Map<String, JsonNode> headers) {
            this.headers.putAll(headers);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "headers", nulls = Nulls.SKIP)
        public _FinalStage headers(Map<String, JsonNode> headers) {
            this.headers.clear();
            this.headers.putAll(headers);
            return this;
        }

        @java.lang.Override
        public DownloadRequestMeta build() {
            return new DownloadRequestMeta(id, url, method, headers, body, additionalProperties);
        }
    }
}
