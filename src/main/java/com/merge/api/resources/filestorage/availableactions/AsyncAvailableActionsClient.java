/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.filestorage.availableactions;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.resources.filestorage.types.AvailableActions;
import java.util.concurrent.CompletableFuture;

public class AsyncAvailableActionsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawAvailableActionsClient rawClient;

    public AsyncAvailableActionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawAvailableActionsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawAvailableActionsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of models and actions available for an account.
     */
    public CompletableFuture<AvailableActions> retrieve() {
        return this.rawClient.retrieve().thenApply(response -> response.body());
    }

    /**
     * Returns a list of models and actions available for an account.
     */
    public CompletableFuture<AvailableActions> retrieve(RequestOptions requestOptions) {
        return this.rawClient.retrieve(requestOptions).thenApply(response -> response.body());
    }
}
