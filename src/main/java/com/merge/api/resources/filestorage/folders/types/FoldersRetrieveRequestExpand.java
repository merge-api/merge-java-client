/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.filestorage.folders.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class FoldersRetrieveRequestExpand {
    public static final FoldersRetrieveRequestExpand PERMISSIONS_DRIVE =
            new FoldersRetrieveRequestExpand(Value.PERMISSIONS_DRIVE, "permissions,drive");

    public static final FoldersRetrieveRequestExpand PERMISSIONS_PARENT_FOLDER_DRIVE =
            new FoldersRetrieveRequestExpand(Value.PERMISSIONS_PARENT_FOLDER_DRIVE, "permissions,parent_folder,drive");

    public static final FoldersRetrieveRequestExpand PERMISSIONS =
            new FoldersRetrieveRequestExpand(Value.PERMISSIONS, "permissions");

    public static final FoldersRetrieveRequestExpand PERMISSIONS_PARENT_FOLDER =
            new FoldersRetrieveRequestExpand(Value.PERMISSIONS_PARENT_FOLDER, "permissions,parent_folder");

    public static final FoldersRetrieveRequestExpand DRIVE = new FoldersRetrieveRequestExpand(Value.DRIVE, "drive");

    public static final FoldersRetrieveRequestExpand PARENT_FOLDER_DRIVE =
            new FoldersRetrieveRequestExpand(Value.PARENT_FOLDER_DRIVE, "parent_folder,drive");

    public static final FoldersRetrieveRequestExpand PARENT_FOLDER =
            new FoldersRetrieveRequestExpand(Value.PARENT_FOLDER, "parent_folder");

    private final Value value;

    private final String string;

    FoldersRetrieveRequestExpand(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof FoldersRetrieveRequestExpand
                        && this.string.equals(((FoldersRetrieveRequestExpand) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case PERMISSIONS_DRIVE:
                return visitor.visitPermissionsDrive();
            case PERMISSIONS_PARENT_FOLDER_DRIVE:
                return visitor.visitPermissionsParentFolderDrive();
            case PERMISSIONS:
                return visitor.visitPermissions();
            case PERMISSIONS_PARENT_FOLDER:
                return visitor.visitPermissionsParentFolder();
            case DRIVE:
                return visitor.visitDrive();
            case PARENT_FOLDER_DRIVE:
                return visitor.visitParentFolderDrive();
            case PARENT_FOLDER:
                return visitor.visitParentFolder();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static FoldersRetrieveRequestExpand valueOf(String value) {
        switch (value) {
            case "permissions,drive":
                return PERMISSIONS_DRIVE;
            case "permissions,parent_folder,drive":
                return PERMISSIONS_PARENT_FOLDER_DRIVE;
            case "permissions":
                return PERMISSIONS;
            case "permissions,parent_folder":
                return PERMISSIONS_PARENT_FOLDER;
            case "drive":
                return DRIVE;
            case "parent_folder,drive":
                return PARENT_FOLDER_DRIVE;
            case "parent_folder":
                return PARENT_FOLDER;
            default:
                return new FoldersRetrieveRequestExpand(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        DRIVE,

        PARENT_FOLDER,

        PARENT_FOLDER_DRIVE,

        PERMISSIONS,

        PERMISSIONS_DRIVE,

        PERMISSIONS_PARENT_FOLDER,

        PERMISSIONS_PARENT_FOLDER_DRIVE,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitDrive();

        T visitParentFolder();

        T visitParentFolderDrive();

        T visitPermissions();

        T visitPermissionsDrive();

        T visitPermissionsParentFolder();

        T visitPermissionsParentFolderDrive();

        T visitUnknown(String unknownType);
    }
}
