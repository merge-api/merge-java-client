/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.accounting.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class MethodTypeEnum {
    public static final MethodTypeEnum CHECK = new MethodTypeEnum(Value.CHECK, "CHECK");

    public static final MethodTypeEnum ACH = new MethodTypeEnum(Value.ACH, "ACH");

    public static final MethodTypeEnum DEBIT_CARD = new MethodTypeEnum(Value.DEBIT_CARD, "DEBIT_CARD");

    public static final MethodTypeEnum CASH = new MethodTypeEnum(Value.CASH, "CASH");

    public static final MethodTypeEnum CREDIT_CARD = new MethodTypeEnum(Value.CREDIT_CARD, "CREDIT_CARD");

    private final Value value;

    private final String string;

    MethodTypeEnum(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof MethodTypeEnum && this.string.equals(((MethodTypeEnum) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case CHECK:
                return visitor.visitCheck();
            case ACH:
                return visitor.visitAch();
            case DEBIT_CARD:
                return visitor.visitDebitCard();
            case CASH:
                return visitor.visitCash();
            case CREDIT_CARD:
                return visitor.visitCreditCard();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static MethodTypeEnum valueOf(String value) {
        switch (value) {
            case "CHECK":
                return CHECK;
            case "ACH":
                return ACH;
            case "DEBIT_CARD":
                return DEBIT_CARD;
            case "CASH":
                return CASH;
            case "CREDIT_CARD":
                return CREDIT_CARD;
            default:
                return new MethodTypeEnum(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        CREDIT_CARD,

        DEBIT_CARD,

        ACH,

        CASH,

        CHECK,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitCreditCard();

        T visitDebitCard();

        T visitAch();

        T visitCash();

        T visitCheck();

        T visitUnknown(String unknownType);
    }
}
