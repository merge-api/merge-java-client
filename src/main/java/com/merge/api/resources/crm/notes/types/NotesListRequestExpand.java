/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm.notes.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class NotesListRequestExpand {
    public static final NotesListRequestExpand OWNER_OPPORTUNITY =
            new NotesListRequestExpand(Value.OWNER_OPPORTUNITY, "owner,opportunity");

    public static final NotesListRequestExpand OPPORTUNITY =
            new NotesListRequestExpand(Value.OPPORTUNITY, "opportunity");

    public static final NotesListRequestExpand OWNER_ACCOUNT =
            new NotesListRequestExpand(Value.OWNER_ACCOUNT, "owner,account");

    public static final NotesListRequestExpand OWNER_ACCOUNT_OPPORTUNITY =
            new NotesListRequestExpand(Value.OWNER_ACCOUNT_OPPORTUNITY, "owner,account,opportunity");

    public static final NotesListRequestExpand ACCOUNT = new NotesListRequestExpand(Value.ACCOUNT, "account");

    public static final NotesListRequestExpand CONTACT_ACCOUNT =
            new NotesListRequestExpand(Value.CONTACT_ACCOUNT, "contact,account");

    public static final NotesListRequestExpand OWNER_CONTACT_ACCOUNT =
            new NotesListRequestExpand(Value.OWNER_CONTACT_ACCOUNT, "owner,contact,account");

    public static final NotesListRequestExpand OWNER_CONTACT_ACCOUNT_OPPORTUNITY =
            new NotesListRequestExpand(Value.OWNER_CONTACT_ACCOUNT_OPPORTUNITY, "owner,contact,account,opportunity");

    public static final NotesListRequestExpand OWNER = new NotesListRequestExpand(Value.OWNER, "owner");

    public static final NotesListRequestExpand OWNER_CONTACT_OPPORTUNITY =
            new NotesListRequestExpand(Value.OWNER_CONTACT_OPPORTUNITY, "owner,contact,opportunity");

    public static final NotesListRequestExpand ACCOUNT_OPPORTUNITY =
            new NotesListRequestExpand(Value.ACCOUNT_OPPORTUNITY, "account,opportunity");

    public static final NotesListRequestExpand OWNER_CONTACT =
            new NotesListRequestExpand(Value.OWNER_CONTACT, "owner,contact");

    public static final NotesListRequestExpand CONTACT_OPPORTUNITY =
            new NotesListRequestExpand(Value.CONTACT_OPPORTUNITY, "contact,opportunity");

    public static final NotesListRequestExpand CONTACT = new NotesListRequestExpand(Value.CONTACT, "contact");

    public static final NotesListRequestExpand CONTACT_ACCOUNT_OPPORTUNITY =
            new NotesListRequestExpand(Value.CONTACT_ACCOUNT_OPPORTUNITY, "contact,account,opportunity");

    private final Value value;

    private final String string;

    NotesListRequestExpand(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof NotesListRequestExpand
                        && this.string.equals(((NotesListRequestExpand) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case OWNER_OPPORTUNITY:
                return visitor.visitOwnerOpportunity();
            case OPPORTUNITY:
                return visitor.visitOpportunity();
            case OWNER_ACCOUNT:
                return visitor.visitOwnerAccount();
            case OWNER_ACCOUNT_OPPORTUNITY:
                return visitor.visitOwnerAccountOpportunity();
            case ACCOUNT:
                return visitor.visitAccount();
            case CONTACT_ACCOUNT:
                return visitor.visitContactAccount();
            case OWNER_CONTACT_ACCOUNT:
                return visitor.visitOwnerContactAccount();
            case OWNER_CONTACT_ACCOUNT_OPPORTUNITY:
                return visitor.visitOwnerContactAccountOpportunity();
            case OWNER:
                return visitor.visitOwner();
            case OWNER_CONTACT_OPPORTUNITY:
                return visitor.visitOwnerContactOpportunity();
            case ACCOUNT_OPPORTUNITY:
                return visitor.visitAccountOpportunity();
            case OWNER_CONTACT:
                return visitor.visitOwnerContact();
            case CONTACT_OPPORTUNITY:
                return visitor.visitContactOpportunity();
            case CONTACT:
                return visitor.visitContact();
            case CONTACT_ACCOUNT_OPPORTUNITY:
                return visitor.visitContactAccountOpportunity();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static NotesListRequestExpand valueOf(String value) {
        switch (value) {
            case "owner,opportunity":
                return OWNER_OPPORTUNITY;
            case "opportunity":
                return OPPORTUNITY;
            case "owner,account":
                return OWNER_ACCOUNT;
            case "owner,account,opportunity":
                return OWNER_ACCOUNT_OPPORTUNITY;
            case "account":
                return ACCOUNT;
            case "contact,account":
                return CONTACT_ACCOUNT;
            case "owner,contact,account":
                return OWNER_CONTACT_ACCOUNT;
            case "owner,contact,account,opportunity":
                return OWNER_CONTACT_ACCOUNT_OPPORTUNITY;
            case "owner":
                return OWNER;
            case "owner,contact,opportunity":
                return OWNER_CONTACT_OPPORTUNITY;
            case "account,opportunity":
                return ACCOUNT_OPPORTUNITY;
            case "owner,contact":
                return OWNER_CONTACT;
            case "contact,opportunity":
                return CONTACT_OPPORTUNITY;
            case "contact":
                return CONTACT;
            case "contact,account,opportunity":
                return CONTACT_ACCOUNT_OPPORTUNITY;
            default:
                return new NotesListRequestExpand(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ACCOUNT,

        ACCOUNT_OPPORTUNITY,

        CONTACT,

        CONTACT_ACCOUNT,

        CONTACT_ACCOUNT_OPPORTUNITY,

        CONTACT_OPPORTUNITY,

        OPPORTUNITY,

        OWNER,

        OWNER_ACCOUNT,

        OWNER_ACCOUNT_OPPORTUNITY,

        OWNER_CONTACT,

        OWNER_CONTACT_ACCOUNT,

        OWNER_CONTACT_ACCOUNT_OPPORTUNITY,

        OWNER_CONTACT_OPPORTUNITY,

        OWNER_OPPORTUNITY,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAccount();

        T visitAccountOpportunity();

        T visitContact();

        T visitContactAccount();

        T visitContactAccountOpportunity();

        T visitContactOpportunity();

        T visitOpportunity();

        T visitOwner();

        T visitOwnerAccount();

        T visitOwnerAccountOpportunity();

        T visitOwnerContact();

        T visitOwnerContactAccount();

        T visitOwnerContactAccountOpportunity();

        T visitOwnerContactOpportunity();

        T visitOwnerOpportunity();

        T visitUnknown(String unknownType);
    }
}
