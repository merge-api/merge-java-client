/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm.contacts.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class ContactsRetrieveRequestExpand {
    public static final ContactsRetrieveRequestExpand OWNER = new ContactsRetrieveRequestExpand(Value.OWNER, "owner");

    public static final ContactsRetrieveRequestExpand ACCOUNT =
            new ContactsRetrieveRequestExpand(Value.ACCOUNT, "account");

    public static final ContactsRetrieveRequestExpand ACCOUNT_OWNER =
            new ContactsRetrieveRequestExpand(Value.ACCOUNT_OWNER, "account,owner");

    private final Value value;

    private final String string;

    ContactsRetrieveRequestExpand(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof ContactsRetrieveRequestExpand
                        && this.string.equals(((ContactsRetrieveRequestExpand) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case OWNER:
                return visitor.visitOwner();
            case ACCOUNT:
                return visitor.visitAccount();
            case ACCOUNT_OWNER:
                return visitor.visitAccountOwner();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static ContactsRetrieveRequestExpand valueOf(String value) {
        switch (value) {
            case "owner":
                return OWNER;
            case "account":
                return ACCOUNT;
            case "account,owner":
                return ACCOUNT_OWNER;
            default:
                return new ContactsRetrieveRequestExpand(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ACCOUNT,

        ACCOUNT_OWNER,

        OWNER,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAccount();

        T visitAccountOwner();

        T visitOwner();

        T visitUnknown(String unknownType);
    }
}
