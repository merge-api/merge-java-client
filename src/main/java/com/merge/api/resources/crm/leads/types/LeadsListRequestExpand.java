/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm.leads.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class LeadsListRequestExpand {
    public static final LeadsListRequestExpand OWNER = new LeadsListRequestExpand(Value.OWNER, "owner");

    public static final LeadsListRequestExpand CONVERTED_CONTACT_CONVERTED_ACCOUNT = new LeadsListRequestExpand(
            Value.CONVERTED_CONTACT_CONVERTED_ACCOUNT, "converted_contact,converted_account");

    public static final LeadsListRequestExpand CONVERTED_ACCOUNT =
            new LeadsListRequestExpand(Value.CONVERTED_ACCOUNT, "converted_account");

    public static final LeadsListRequestExpand OWNER_CONVERTED_ACCOUNT =
            new LeadsListRequestExpand(Value.OWNER_CONVERTED_ACCOUNT, "owner,converted_account");

    public static final LeadsListRequestExpand CONVERTED_CONTACT =
            new LeadsListRequestExpand(Value.CONVERTED_CONTACT, "converted_contact");

    public static final LeadsListRequestExpand OWNER_CONVERTED_CONTACT =
            new LeadsListRequestExpand(Value.OWNER_CONVERTED_CONTACT, "owner,converted_contact");

    public static final LeadsListRequestExpand OWNER_CONVERTED_CONTACT_CONVERTED_ACCOUNT = new LeadsListRequestExpand(
            Value.OWNER_CONVERTED_CONTACT_CONVERTED_ACCOUNT, "owner,converted_contact,converted_account");

    private final Value value;

    private final String string;

    LeadsListRequestExpand(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof LeadsListRequestExpand
                        && this.string.equals(((LeadsListRequestExpand) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case OWNER:
                return visitor.visitOwner();
            case CONVERTED_CONTACT_CONVERTED_ACCOUNT:
                return visitor.visitConvertedContactConvertedAccount();
            case CONVERTED_ACCOUNT:
                return visitor.visitConvertedAccount();
            case OWNER_CONVERTED_ACCOUNT:
                return visitor.visitOwnerConvertedAccount();
            case CONVERTED_CONTACT:
                return visitor.visitConvertedContact();
            case OWNER_CONVERTED_CONTACT:
                return visitor.visitOwnerConvertedContact();
            case OWNER_CONVERTED_CONTACT_CONVERTED_ACCOUNT:
                return visitor.visitOwnerConvertedContactConvertedAccount();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static LeadsListRequestExpand valueOf(String value) {
        switch (value) {
            case "owner":
                return OWNER;
            case "converted_contact,converted_account":
                return CONVERTED_CONTACT_CONVERTED_ACCOUNT;
            case "converted_account":
                return CONVERTED_ACCOUNT;
            case "owner,converted_account":
                return OWNER_CONVERTED_ACCOUNT;
            case "converted_contact":
                return CONVERTED_CONTACT;
            case "owner,converted_contact":
                return OWNER_CONVERTED_CONTACT;
            case "owner,converted_contact,converted_account":
                return OWNER_CONVERTED_CONTACT_CONVERTED_ACCOUNT;
            default:
                return new LeadsListRequestExpand(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        CONVERTED_ACCOUNT,

        CONVERTED_CONTACT,

        CONVERTED_CONTACT_CONVERTED_ACCOUNT,

        OWNER,

        OWNER_CONVERTED_ACCOUNT,

        OWNER_CONVERTED_CONTACT,

        OWNER_CONVERTED_CONTACT_CONVERTED_ACCOUNT,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitConvertedAccount();

        T visitConvertedContact();

        T visitConvertedContactConvertedAccount();

        T visitOwner();

        T visitOwnerConvertedAccount();

        T visitOwnerConvertedContact();

        T visitOwnerConvertedContactConvertedAccount();

        T visitUnknown(String unknownType);
    }
}
