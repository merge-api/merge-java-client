/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm.users;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.resources.crm.types.IgnoreCommonModelRequest;
import com.merge.api.resources.crm.types.PaginatedRemoteFieldClassList;
import com.merge.api.resources.crm.types.PaginatedUserList;
import com.merge.api.resources.crm.types.User;
import com.merge.api.resources.crm.users.requests.UsersListRequest;
import com.merge.api.resources.crm.users.requests.UsersRemoteFieldClassesListRequest;
import com.merge.api.resources.crm.users.requests.UsersRetrieveRequest;

public class UsersClient {
    protected final ClientOptions clientOptions;

    private final RawUsersClient rawClient;

    public UsersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawUsersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawUsersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public PaginatedUserList list() {
        return this.rawClient.list().body();
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public PaginatedUserList list(UsersListRequest request) {
        return this.rawClient.list(request).body();
    }

    /**
     * Returns a list of <code>User</code> objects.
     */
    public PaginatedUserList list(UsersListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    /**
     * Returns a <code>User</code> object with the given <code>id</code>.
     */
    public User retrieve(String id) {
        return this.rawClient.retrieve(id).body();
    }

    /**
     * Returns a <code>User</code> object with the given <code>id</code>.
     */
    public User retrieve(String id, UsersRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).body();
    }

    /**
     * Returns a <code>User</code> object with the given <code>id</code>.
     */
    public User retrieve(String id, UsersRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).body();
    }

    /**
     * Ignores a specific row based on the <code>model_id</code> in the url. These records will have their properties set to null, and will not be updated in future syncs. The &quot;reason&quot; and &quot;message&quot; fields in the request body will be stored for audit purposes.
     */
    public void ignoreCreate(String modelId, IgnoreCommonModelRequest request) {
        this.rawClient.ignoreCreate(modelId, request).body();
    }

    /**
     * Ignores a specific row based on the <code>model_id</code> in the url. These records will have their properties set to null, and will not be updated in future syncs. The &quot;reason&quot; and &quot;message&quot; fields in the request body will be stored for audit purposes.
     */
    public void ignoreCreate(String modelId, IgnoreCommonModelRequest request, RequestOptions requestOptions) {
        this.rawClient.ignoreCreate(modelId, request, requestOptions).body();
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public PaginatedRemoteFieldClassList remoteFieldClassesList() {
        return this.rawClient.remoteFieldClassesList().body();
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public PaginatedRemoteFieldClassList remoteFieldClassesList(UsersRemoteFieldClassesListRequest request) {
        return this.rawClient.remoteFieldClassesList(request).body();
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public PaginatedRemoteFieldClassList remoteFieldClassesList(
            UsersRemoteFieldClassesListRequest request, RequestOptions requestOptions) {
        return this.rawClient.remoteFieldClassesList(request, requestOptions).body();
    }
}
