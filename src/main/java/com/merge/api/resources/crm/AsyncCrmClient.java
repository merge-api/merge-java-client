/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.crm;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.Suppliers;
import com.merge.api.resources.crm.accountdetails.AsyncAccountDetailsClient;
import com.merge.api.resources.crm.accounts.AsyncAccountsClient;
import com.merge.api.resources.crm.accounttoken.AsyncAccountTokenClient;
import com.merge.api.resources.crm.associations.AsyncAssociationsClient;
import com.merge.api.resources.crm.associationtypes.AsyncAssociationTypesClient;
import com.merge.api.resources.crm.asyncpassthrough.AsyncAsyncPassthroughClient;
import com.merge.api.resources.crm.audittrail.AsyncAuditTrailClient;
import com.merge.api.resources.crm.availableactions.AsyncAvailableActionsClient;
import com.merge.api.resources.crm.contacts.AsyncContactsClient;
import com.merge.api.resources.crm.customobjectclasses.AsyncCustomObjectClassesClient;
import com.merge.api.resources.crm.customobjects.AsyncCustomObjectsClient;
import com.merge.api.resources.crm.deleteaccount.AsyncDeleteAccountClient;
import com.merge.api.resources.crm.engagements.AsyncEngagementsClient;
import com.merge.api.resources.crm.engagementtypes.AsyncEngagementTypesClient;
import com.merge.api.resources.crm.fieldmapping.AsyncFieldMappingClient;
import com.merge.api.resources.crm.forceresync.AsyncForceResyncClient;
import com.merge.api.resources.crm.generatekey.AsyncGenerateKeyClient;
import com.merge.api.resources.crm.issues.AsyncIssuesClient;
import com.merge.api.resources.crm.leads.AsyncLeadsClient;
import com.merge.api.resources.crm.linkedaccounts.AsyncLinkedAccountsClient;
import com.merge.api.resources.crm.linktoken.AsyncLinkTokenClient;
import com.merge.api.resources.crm.notes.AsyncNotesClient;
import com.merge.api.resources.crm.opportunities.AsyncOpportunitiesClient;
import com.merge.api.resources.crm.passthrough.AsyncPassthroughClient;
import com.merge.api.resources.crm.regeneratekey.AsyncRegenerateKeyClient;
import com.merge.api.resources.crm.scopes.AsyncScopesClient;
import com.merge.api.resources.crm.stages.AsyncStagesClient;
import com.merge.api.resources.crm.syncstatus.AsyncSyncStatusClient;
import com.merge.api.resources.crm.tasks.AsyncTasksClient;
import com.merge.api.resources.crm.users.AsyncUsersClient;
import com.merge.api.resources.crm.webhookreceivers.AsyncWebhookReceiversClient;
import java.util.function.Supplier;

public class AsyncCrmClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncAccountDetailsClient> accountDetailsClient;

    protected final Supplier<AsyncAccountTokenClient> accountTokenClient;

    protected final Supplier<AsyncAccountsClient> accountsClient;

    protected final Supplier<AsyncAsyncPassthroughClient> asyncPassthroughClient;

    protected final Supplier<AsyncAuditTrailClient> auditTrailClient;

    protected final Supplier<AsyncAvailableActionsClient> availableActionsClient;

    protected final Supplier<AsyncContactsClient> contactsClient;

    protected final Supplier<AsyncCustomObjectClassesClient> customObjectClassesClient;

    protected final Supplier<AsyncAssociationTypesClient> associationTypesClient;

    protected final Supplier<AsyncCustomObjectsClient> customObjectsClient;

    protected final Supplier<AsyncAssociationsClient> associationsClient;

    protected final Supplier<AsyncScopesClient> scopesClient;

    protected final Supplier<AsyncDeleteAccountClient> deleteAccountClient;

    protected final Supplier<AsyncEngagementTypesClient> engagementTypesClient;

    protected final Supplier<AsyncEngagementsClient> engagementsClient;

    protected final Supplier<AsyncFieldMappingClient> fieldMappingClient;

    protected final Supplier<AsyncGenerateKeyClient> generateKeyClient;

    protected final Supplier<AsyncIssuesClient> issuesClient;

    protected final Supplier<AsyncLeadsClient> leadsClient;

    protected final Supplier<AsyncLinkTokenClient> linkTokenClient;

    protected final Supplier<AsyncLinkedAccountsClient> linkedAccountsClient;

    protected final Supplier<AsyncNotesClient> notesClient;

    protected final Supplier<AsyncOpportunitiesClient> opportunitiesClient;

    protected final Supplier<AsyncPassthroughClient> passthroughClient;

    protected final Supplier<AsyncRegenerateKeyClient> regenerateKeyClient;

    protected final Supplier<AsyncStagesClient> stagesClient;

    protected final Supplier<AsyncSyncStatusClient> syncStatusClient;

    protected final Supplier<AsyncForceResyncClient> forceResyncClient;

    protected final Supplier<AsyncTasksClient> tasksClient;

    protected final Supplier<AsyncUsersClient> usersClient;

    protected final Supplier<AsyncWebhookReceiversClient> webhookReceiversClient;

    public AsyncCrmClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.accountDetailsClient = Suppliers.memoize(() -> new AsyncAccountDetailsClient(clientOptions));
        this.accountTokenClient = Suppliers.memoize(() -> new AsyncAccountTokenClient(clientOptions));
        this.accountsClient = Suppliers.memoize(() -> new AsyncAccountsClient(clientOptions));
        this.asyncPassthroughClient = Suppliers.memoize(() -> new AsyncAsyncPassthroughClient(clientOptions));
        this.auditTrailClient = Suppliers.memoize(() -> new AsyncAuditTrailClient(clientOptions));
        this.availableActionsClient = Suppliers.memoize(() -> new AsyncAvailableActionsClient(clientOptions));
        this.contactsClient = Suppliers.memoize(() -> new AsyncContactsClient(clientOptions));
        this.customObjectClassesClient = Suppliers.memoize(() -> new AsyncCustomObjectClassesClient(clientOptions));
        this.associationTypesClient = Suppliers.memoize(() -> new AsyncAssociationTypesClient(clientOptions));
        this.customObjectsClient = Suppliers.memoize(() -> new AsyncCustomObjectsClient(clientOptions));
        this.associationsClient = Suppliers.memoize(() -> new AsyncAssociationsClient(clientOptions));
        this.scopesClient = Suppliers.memoize(() -> new AsyncScopesClient(clientOptions));
        this.deleteAccountClient = Suppliers.memoize(() -> new AsyncDeleteAccountClient(clientOptions));
        this.engagementTypesClient = Suppliers.memoize(() -> new AsyncEngagementTypesClient(clientOptions));
        this.engagementsClient = Suppliers.memoize(() -> new AsyncEngagementsClient(clientOptions));
        this.fieldMappingClient = Suppliers.memoize(() -> new AsyncFieldMappingClient(clientOptions));
        this.generateKeyClient = Suppliers.memoize(() -> new AsyncGenerateKeyClient(clientOptions));
        this.issuesClient = Suppliers.memoize(() -> new AsyncIssuesClient(clientOptions));
        this.leadsClient = Suppliers.memoize(() -> new AsyncLeadsClient(clientOptions));
        this.linkTokenClient = Suppliers.memoize(() -> new AsyncLinkTokenClient(clientOptions));
        this.linkedAccountsClient = Suppliers.memoize(() -> new AsyncLinkedAccountsClient(clientOptions));
        this.notesClient = Suppliers.memoize(() -> new AsyncNotesClient(clientOptions));
        this.opportunitiesClient = Suppliers.memoize(() -> new AsyncOpportunitiesClient(clientOptions));
        this.passthroughClient = Suppliers.memoize(() -> new AsyncPassthroughClient(clientOptions));
        this.regenerateKeyClient = Suppliers.memoize(() -> new AsyncRegenerateKeyClient(clientOptions));
        this.stagesClient = Suppliers.memoize(() -> new AsyncStagesClient(clientOptions));
        this.syncStatusClient = Suppliers.memoize(() -> new AsyncSyncStatusClient(clientOptions));
        this.forceResyncClient = Suppliers.memoize(() -> new AsyncForceResyncClient(clientOptions));
        this.tasksClient = Suppliers.memoize(() -> new AsyncTasksClient(clientOptions));
        this.usersClient = Suppliers.memoize(() -> new AsyncUsersClient(clientOptions));
        this.webhookReceiversClient = Suppliers.memoize(() -> new AsyncWebhookReceiversClient(clientOptions));
    }

    public AsyncAccountDetailsClient accountDetails() {
        return this.accountDetailsClient.get();
    }

    public AsyncAccountTokenClient accountToken() {
        return this.accountTokenClient.get();
    }

    public AsyncAccountsClient accounts() {
        return this.accountsClient.get();
    }

    public AsyncAsyncPassthroughClient asyncPassthrough() {
        return this.asyncPassthroughClient.get();
    }

    public AsyncAuditTrailClient auditTrail() {
        return this.auditTrailClient.get();
    }

    public AsyncAvailableActionsClient availableActions() {
        return this.availableActionsClient.get();
    }

    public AsyncContactsClient contacts() {
        return this.contactsClient.get();
    }

    public AsyncCustomObjectClassesClient customObjectClasses() {
        return this.customObjectClassesClient.get();
    }

    public AsyncAssociationTypesClient associationTypes() {
        return this.associationTypesClient.get();
    }

    public AsyncCustomObjectsClient customObjects() {
        return this.customObjectsClient.get();
    }

    public AsyncAssociationsClient associations() {
        return this.associationsClient.get();
    }

    public AsyncScopesClient scopes() {
        return this.scopesClient.get();
    }

    public AsyncDeleteAccountClient deleteAccount() {
        return this.deleteAccountClient.get();
    }

    public AsyncEngagementTypesClient engagementTypes() {
        return this.engagementTypesClient.get();
    }

    public AsyncEngagementsClient engagements() {
        return this.engagementsClient.get();
    }

    public AsyncFieldMappingClient fieldMapping() {
        return this.fieldMappingClient.get();
    }

    public AsyncGenerateKeyClient generateKey() {
        return this.generateKeyClient.get();
    }

    public AsyncIssuesClient issues() {
        return this.issuesClient.get();
    }

    public AsyncLeadsClient leads() {
        return this.leadsClient.get();
    }

    public AsyncLinkTokenClient linkToken() {
        return this.linkTokenClient.get();
    }

    public AsyncLinkedAccountsClient linkedAccounts() {
        return this.linkedAccountsClient.get();
    }

    public AsyncNotesClient notes() {
        return this.notesClient.get();
    }

    public AsyncOpportunitiesClient opportunities() {
        return this.opportunitiesClient.get();
    }

    public AsyncPassthroughClient passthrough() {
        return this.passthroughClient.get();
    }

    public AsyncRegenerateKeyClient regenerateKey() {
        return this.regenerateKeyClient.get();
    }

    public AsyncStagesClient stages() {
        return this.stagesClient.get();
    }

    public AsyncSyncStatusClient syncStatus() {
        return this.syncStatusClient.get();
    }

    public AsyncForceResyncClient forceResync() {
        return this.forceResyncClient.get();
    }

    public AsyncTasksClient tasks() {
        return this.tasksClient.get();
    }

    public AsyncUsersClient users() {
        return this.usersClient.get();
    }

    public AsyncWebhookReceiversClient webhookReceivers() {
        return this.webhookReceiversClient.get();
    }
}
