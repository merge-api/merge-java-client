/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.hris.fieldmapping;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.resources.hris.fieldmapping.requests.CreateFieldMappingRequest;
import com.merge.api.resources.hris.fieldmapping.requests.FieldMappingsRetrieveRequest;
import com.merge.api.resources.hris.fieldmapping.requests.PatchedEditFieldMappingRequest;
import com.merge.api.resources.hris.fieldmapping.requests.RemoteFieldsRetrieveRequest;
import com.merge.api.resources.hris.types.ExternalTargetFieldApiResponse;
import com.merge.api.resources.hris.types.FieldMappingApiInstanceResponse;
import com.merge.api.resources.hris.types.FieldMappingInstanceResponse;
import com.merge.api.resources.hris.types.RemoteFieldApiResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncFieldMappingClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawFieldMappingClient rawClient;

    public AsyncFieldMappingClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawFieldMappingClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawFieldMappingClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<FieldMappingApiInstanceResponse> fieldMappingsRetrieve() {
        return this.rawClient.fieldMappingsRetrieve().thenApply(response -> response.body());
    }

    /**
     * Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<FieldMappingApiInstanceResponse> fieldMappingsRetrieve(
            FieldMappingsRetrieveRequest request) {
        return this.rawClient.fieldMappingsRetrieve(request).thenApply(response -> response.body());
    }

    /**
     * Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<FieldMappingApiInstanceResponse> fieldMappingsRetrieve(
            FieldMappingsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.fieldMappingsRetrieve(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsCreate(CreateFieldMappingRequest request) {
        return this.rawClient.fieldMappingsCreate(request).thenApply(response -> response.body());
    }

    /**
     * Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsCreate(
            CreateFieldMappingRequest request, RequestOptions requestOptions) {
        return this.rawClient.fieldMappingsCreate(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsDestroy(String fieldMappingId) {
        return this.rawClient.fieldMappingsDestroy(fieldMappingId).thenApply(response -> response.body());
    }

    /**
     * Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsDestroy(
            String fieldMappingId, RequestOptions requestOptions) {
        return this.rawClient
                .fieldMappingsDestroy(fieldMappingId, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsPartialUpdate(String fieldMappingId) {
        return this.rawClient.fieldMappingsPartialUpdate(fieldMappingId).thenApply(response -> response.body());
    }

    /**
     * Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsPartialUpdate(
            String fieldMappingId, PatchedEditFieldMappingRequest request) {
        return this.rawClient
                .fieldMappingsPartialUpdate(fieldMappingId, request)
                .thenApply(response -> response.body());
    }

    /**
     * Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync <strong>ALL</strong> data from start.
     */
    public CompletableFuture<FieldMappingInstanceResponse> fieldMappingsPartialUpdate(
            String fieldMappingId, PatchedEditFieldMappingRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .fieldMappingsPartialUpdate(fieldMappingId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<RemoteFieldApiResponse> remoteFieldsRetrieve() {
        return this.rawClient.remoteFieldsRetrieve().thenApply(response -> response.body());
    }

    /**
     * Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<RemoteFieldApiResponse> remoteFieldsRetrieve(RemoteFieldsRetrieveRequest request) {
        return this.rawClient.remoteFieldsRetrieve(request).thenApply(response -> response.body());
    }

    /**
     * Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. <a href="https://docs.merge.dev/supplemental-data/field-mappings/overview/">Learn more</a>.
     */
    public CompletableFuture<RemoteFieldApiResponse> remoteFieldsRetrieve(
            RemoteFieldsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.remoteFieldsRetrieve(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. <a href="https://docs.merge.dev/supplemental-data/field-mappings/target-fields/">Learn more</a>.
     */
    public CompletableFuture<ExternalTargetFieldApiResponse> targetFieldsRetrieve() {
        return this.rawClient.targetFieldsRetrieve().thenApply(response -> response.body());
    }

    /**
     * Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. <a href="https://docs.merge.dev/supplemental-data/field-mappings/target-fields/">Learn more</a>.
     */
    public CompletableFuture<ExternalTargetFieldApiResponse> targetFieldsRetrieve(RequestOptions requestOptions) {
        return this.rawClient.targetFieldsRetrieve(requestOptions).thenApply(response -> response.body());
    }
}
