/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.resources.ticketing.syncstatus;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.resources.ticketing.syncstatus.requests.SyncStatusListRequest;
import com.merge.api.resources.ticketing.types.PaginatedSyncStatusList;
import java.util.concurrent.CompletableFuture;

public class AsyncSyncStatusClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSyncStatusClient rawClient;

    public AsyncSyncStatusClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSyncStatusClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSyncStatusClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get sync status for the current sync and the most recently finished sync. <code>last_sync_start</code> represents the most recent time any sync began. <code>last_sync_finished</code> represents the most recent time any sync completed. These timestamps may correspond to different sync instances which may result in a sync start time being later than a separate sync completed time. To ensure you are retrieving the latest available data reference the <code>last_sync_finished</code> timestamp where <code>last_sync_result</code> is <code>DONE</code>. Possible values for <code>status</code> and <code>last_sync_result</code> are <code>DISABLED</code>, <code>DONE</code>, <code>FAILED</code>, <code>PARTIALLY_SYNCED</code>, <code>PAUSED</code>, <code>SYNCING</code>. Learn more about sync status in our <a href="https://help.merge.dev/en/articles/8184193-merge-sync-statuses">Help Center</a>.
     */
    public CompletableFuture<PaginatedSyncStatusList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Get sync status for the current sync and the most recently finished sync. <code>last_sync_start</code> represents the most recent time any sync began. <code>last_sync_finished</code> represents the most recent time any sync completed. These timestamps may correspond to different sync instances which may result in a sync start time being later than a separate sync completed time. To ensure you are retrieving the latest available data reference the <code>last_sync_finished</code> timestamp where <code>last_sync_result</code> is <code>DONE</code>. Possible values for <code>status</code> and <code>last_sync_result</code> are <code>DISABLED</code>, <code>DONE</code>, <code>FAILED</code>, <code>PARTIALLY_SYNCED</code>, <code>PAUSED</code>, <code>SYNCING</code>. Learn more about sync status in our <a href="https://help.merge.dev/en/articles/8184193-merge-sync-statuses">Help Center</a>.
     */
    public CompletableFuture<PaginatedSyncStatusList> list(SyncStatusListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Get sync status for the current sync and the most recently finished sync. <code>last_sync_start</code> represents the most recent time any sync began. <code>last_sync_finished</code> represents the most recent time any sync completed. These timestamps may correspond to different sync instances which may result in a sync start time being later than a separate sync completed time. To ensure you are retrieving the latest available data reference the <code>last_sync_finished</code> timestamp where <code>last_sync_result</code> is <code>DONE</code>. Possible values for <code>status</code> and <code>last_sync_result</code> are <code>DISABLED</code>, <code>DONE</code>, <code>FAILED</code>, <code>PARTIALLY_SYNCED</code>, <code>PAUSED</code>, <code>SYNCING</code>. Learn more about sync status in our <a href="https://help.merge.dev/en/articles/8184193-merge-sync-statuses">Help Center</a>.
     */
    public CompletableFuture<PaginatedSyncStatusList> list(
            SyncStatusListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }
}
