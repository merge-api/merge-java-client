/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.crm;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.core.SyncPagingIterable;
import com.merge.api.crm.types.MetaResponse;
import com.merge.api.crm.types.PatchedTaskEndpointRequest;
import com.merge.api.crm.types.RemoteFieldClass;
import com.merge.api.crm.types.Task;
import com.merge.api.crm.types.TaskEndpointRequest;
import com.merge.api.crm.types.TaskResponse;
import com.merge.api.crm.types.TasksListRequest;
import com.merge.api.crm.types.TasksRemoteFieldClassesListRequest;
import com.merge.api.crm.types.TasksRetrieveRequest;
import java.util.concurrent.CompletableFuture;

public class AsyncTasksClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTasksClient rawClient;

    public AsyncTasksClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTasksClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTasksClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Task</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Task>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Task</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Task>> list(TasksListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Task</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Task>> list(TasksListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Task</code> object with the given values.
     */
    public CompletableFuture<TaskResponse> create(TaskEndpointRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates a <code>Task</code> object with the given values.
     */
    public CompletableFuture<TaskResponse> create(TaskEndpointRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Task</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Task> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Task</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Task> retrieve(String id, TasksRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Task</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Task> retrieve(String id, TasksRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates a <code>Task</code> object with the given <code>id</code>.
     */
    public CompletableFuture<TaskResponse> partialUpdate(String id, PatchedTaskEndpointRequest request) {
        return this.rawClient.partialUpdate(id, request).thenApply(response -> response.body());
    }

    /**
     * Updates a <code>Task</code> object with the given <code>id</code>.
     */
    public CompletableFuture<TaskResponse> partialUpdate(
            String id, PatchedTaskEndpointRequest request, RequestOptions requestOptions) {
        return this.rawClient.partialUpdate(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Task</code> PATCHs.
     */
    public CompletableFuture<MetaResponse> metaPatchRetrieve(String id) {
        return this.rawClient.metaPatchRetrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Task</code> PATCHs.
     */
    public CompletableFuture<MetaResponse> metaPatchRetrieve(String id, RequestOptions requestOptions) {
        return this.rawClient.metaPatchRetrieve(id, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Task</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve() {
        return this.rawClient.metaPostRetrieve().thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Task</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve(RequestOptions requestOptions) {
        return this.rawClient.metaPostRetrieve(requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList() {
        return this.rawClient.remoteFieldClassesList().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList(
            TasksRemoteFieldClassesListRequest request) {
        return this.rawClient.remoteFieldClassesList(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList(
            TasksRemoteFieldClassesListRequest request, RequestOptions requestOptions) {
        return this.rawClient.remoteFieldClassesList(request, requestOptions).thenApply(response -> response.body());
    }
}
