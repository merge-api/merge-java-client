/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.accounting;

import com.merge.api.core.ClientOptions;
import com.merge.api.core.Suppliers;
import java.util.function.Supplier;

public class AsyncAccountingClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncAccountDetailsClient> accountDetailsClient;

    protected final Supplier<AsyncAccountTokenClient> accountTokenClient;

    protected final Supplier<AsyncAccountingPeriodsClient> accountingPeriodsClient;

    protected final Supplier<AsyncAccountsClient> accountsClient;

    protected final Supplier<AsyncAddressesClient> addressesClient;

    protected final Supplier<AsyncAsyncPassthroughClient> asyncPassthroughClient;

    protected final Supplier<AsyncAsyncTasksClient> asyncTasksClient;

    protected final Supplier<AsyncAttachmentsClient> attachmentsClient;

    protected final Supplier<AsyncAuditTrailClient> auditTrailClient;

    protected final Supplier<AsyncAvailableActionsClient> availableActionsClient;

    protected final Supplier<AsyncBalanceSheetsClient> balanceSheetsClient;

    protected final Supplier<AsyncBankFeedAccountsClient> bankFeedAccountsClient;

    protected final Supplier<AsyncBankFeedTransactionsClient> bankFeedTransactionsClient;

    protected final Supplier<AsyncCashFlowStatementsClient> cashFlowStatementsClient;

    protected final Supplier<AsyncCompanyInfoClient> companyInfoClient;

    protected final Supplier<AsyncContactsClient> contactsClient;

    protected final Supplier<AsyncCreditNotesClient> creditNotesClient;

    protected final Supplier<AsyncScopesClient> scopesClient;

    protected final Supplier<AsyncDeleteAccountClient> deleteAccountClient;

    protected final Supplier<AsyncEmployeesClient> employeesClient;

    protected final Supplier<AsyncExpensesClient> expensesClient;

    protected final Supplier<AsyncFieldMappingClient> fieldMappingClient;

    protected final Supplier<AsyncGeneralLedgerTransactionsClient> generalLedgerTransactionsClient;

    protected final Supplier<AsyncGenerateKeyClient> generateKeyClient;

    protected final Supplier<AsyncIncomeStatementsClient> incomeStatementsClient;

    protected final Supplier<AsyncInvoicesClient> invoicesClient;

    protected final Supplier<AsyncIssuesClient> issuesClient;

    protected final Supplier<AsyncItemsClient> itemsClient;

    protected final Supplier<AsyncJournalEntriesClient> journalEntriesClient;

    protected final Supplier<AsyncLinkTokenClient> linkTokenClient;

    protected final Supplier<AsyncLinkedAccountsClient> linkedAccountsClient;

    protected final Supplier<AsyncPassthroughClient> passthroughClient;

    protected final Supplier<AsyncPaymentMethodsClient> paymentMethodsClient;

    protected final Supplier<AsyncPaymentTermsClient> paymentTermsClient;

    protected final Supplier<AsyncPaymentsClient> paymentsClient;

    protected final Supplier<AsyncPhoneNumbersClient> phoneNumbersClient;

    protected final Supplier<AsyncProjectsClient> projectsClient;

    protected final Supplier<AsyncPurchaseOrdersClient> purchaseOrdersClient;

    protected final Supplier<AsyncRegenerateKeyClient> regenerateKeyClient;

    protected final Supplier<AsyncSyncStatusClient> syncStatusClient;

    protected final Supplier<AsyncForceResyncClient> forceResyncClient;

    protected final Supplier<AsyncTaxRatesClient> taxRatesClient;

    protected final Supplier<AsyncTrackingCategoriesClient> trackingCategoriesClient;

    protected final Supplier<AsyncTransactionsClient> transactionsClient;

    protected final Supplier<AsyncVendorCreditsClient> vendorCreditsClient;

    protected final Supplier<AsyncWebhookReceiversClient> webhookReceiversClient;

    public AsyncAccountingClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.accountDetailsClient = Suppliers.memoize(() -> new AsyncAccountDetailsClient(clientOptions));
        this.accountTokenClient = Suppliers.memoize(() -> new AsyncAccountTokenClient(clientOptions));
        this.accountingPeriodsClient = Suppliers.memoize(() -> new AsyncAccountingPeriodsClient(clientOptions));
        this.accountsClient = Suppliers.memoize(() -> new AsyncAccountsClient(clientOptions));
        this.addressesClient = Suppliers.memoize(() -> new AsyncAddressesClient(clientOptions));
        this.asyncPassthroughClient = Suppliers.memoize(() -> new AsyncAsyncPassthroughClient(clientOptions));
        this.asyncTasksClient = Suppliers.memoize(() -> new AsyncAsyncTasksClient(clientOptions));
        this.attachmentsClient = Suppliers.memoize(() -> new AsyncAttachmentsClient(clientOptions));
        this.auditTrailClient = Suppliers.memoize(() -> new AsyncAuditTrailClient(clientOptions));
        this.availableActionsClient = Suppliers.memoize(() -> new AsyncAvailableActionsClient(clientOptions));
        this.balanceSheetsClient = Suppliers.memoize(() -> new AsyncBalanceSheetsClient(clientOptions));
        this.bankFeedAccountsClient = Suppliers.memoize(() -> new AsyncBankFeedAccountsClient(clientOptions));
        this.bankFeedTransactionsClient = Suppliers.memoize(() -> new AsyncBankFeedTransactionsClient(clientOptions));
        this.cashFlowStatementsClient = Suppliers.memoize(() -> new AsyncCashFlowStatementsClient(clientOptions));
        this.companyInfoClient = Suppliers.memoize(() -> new AsyncCompanyInfoClient(clientOptions));
        this.contactsClient = Suppliers.memoize(() -> new AsyncContactsClient(clientOptions));
        this.creditNotesClient = Suppliers.memoize(() -> new AsyncCreditNotesClient(clientOptions));
        this.scopesClient = Suppliers.memoize(() -> new AsyncScopesClient(clientOptions));
        this.deleteAccountClient = Suppliers.memoize(() -> new AsyncDeleteAccountClient(clientOptions));
        this.employeesClient = Suppliers.memoize(() -> new AsyncEmployeesClient(clientOptions));
        this.expensesClient = Suppliers.memoize(() -> new AsyncExpensesClient(clientOptions));
        this.fieldMappingClient = Suppliers.memoize(() -> new AsyncFieldMappingClient(clientOptions));
        this.generalLedgerTransactionsClient =
                Suppliers.memoize(() -> new AsyncGeneralLedgerTransactionsClient(clientOptions));
        this.generateKeyClient = Suppliers.memoize(() -> new AsyncGenerateKeyClient(clientOptions));
        this.incomeStatementsClient = Suppliers.memoize(() -> new AsyncIncomeStatementsClient(clientOptions));
        this.invoicesClient = Suppliers.memoize(() -> new AsyncInvoicesClient(clientOptions));
        this.issuesClient = Suppliers.memoize(() -> new AsyncIssuesClient(clientOptions));
        this.itemsClient = Suppliers.memoize(() -> new AsyncItemsClient(clientOptions));
        this.journalEntriesClient = Suppliers.memoize(() -> new AsyncJournalEntriesClient(clientOptions));
        this.linkTokenClient = Suppliers.memoize(() -> new AsyncLinkTokenClient(clientOptions));
        this.linkedAccountsClient = Suppliers.memoize(() -> new AsyncLinkedAccountsClient(clientOptions));
        this.passthroughClient = Suppliers.memoize(() -> new AsyncPassthroughClient(clientOptions));
        this.paymentMethodsClient = Suppliers.memoize(() -> new AsyncPaymentMethodsClient(clientOptions));
        this.paymentTermsClient = Suppliers.memoize(() -> new AsyncPaymentTermsClient(clientOptions));
        this.paymentsClient = Suppliers.memoize(() -> new AsyncPaymentsClient(clientOptions));
        this.phoneNumbersClient = Suppliers.memoize(() -> new AsyncPhoneNumbersClient(clientOptions));
        this.projectsClient = Suppliers.memoize(() -> new AsyncProjectsClient(clientOptions));
        this.purchaseOrdersClient = Suppliers.memoize(() -> new AsyncPurchaseOrdersClient(clientOptions));
        this.regenerateKeyClient = Suppliers.memoize(() -> new AsyncRegenerateKeyClient(clientOptions));
        this.syncStatusClient = Suppliers.memoize(() -> new AsyncSyncStatusClient(clientOptions));
        this.forceResyncClient = Suppliers.memoize(() -> new AsyncForceResyncClient(clientOptions));
        this.taxRatesClient = Suppliers.memoize(() -> new AsyncTaxRatesClient(clientOptions));
        this.trackingCategoriesClient = Suppliers.memoize(() -> new AsyncTrackingCategoriesClient(clientOptions));
        this.transactionsClient = Suppliers.memoize(() -> new AsyncTransactionsClient(clientOptions));
        this.vendorCreditsClient = Suppliers.memoize(() -> new AsyncVendorCreditsClient(clientOptions));
        this.webhookReceiversClient = Suppliers.memoize(() -> new AsyncWebhookReceiversClient(clientOptions));
    }

    public AsyncAccountDetailsClient accountDetails() {
        return this.accountDetailsClient.get();
    }

    public AsyncAccountTokenClient accountToken() {
        return this.accountTokenClient.get();
    }

    public AsyncAccountingPeriodsClient accountingPeriods() {
        return this.accountingPeriodsClient.get();
    }

    public AsyncAccountsClient accounts() {
        return this.accountsClient.get();
    }

    public AsyncAddressesClient addresses() {
        return this.addressesClient.get();
    }

    public AsyncAsyncPassthroughClient asyncPassthrough() {
        return this.asyncPassthroughClient.get();
    }

    public AsyncAsyncTasksClient asyncTasks() {
        return this.asyncTasksClient.get();
    }

    public AsyncAttachmentsClient attachments() {
        return this.attachmentsClient.get();
    }

    public AsyncAuditTrailClient auditTrail() {
        return this.auditTrailClient.get();
    }

    public AsyncAvailableActionsClient availableActions() {
        return this.availableActionsClient.get();
    }

    public AsyncBalanceSheetsClient balanceSheets() {
        return this.balanceSheetsClient.get();
    }

    public AsyncBankFeedAccountsClient bankFeedAccounts() {
        return this.bankFeedAccountsClient.get();
    }

    public AsyncBankFeedTransactionsClient bankFeedTransactions() {
        return this.bankFeedTransactionsClient.get();
    }

    public AsyncCashFlowStatementsClient cashFlowStatements() {
        return this.cashFlowStatementsClient.get();
    }

    public AsyncCompanyInfoClient companyInfo() {
        return this.companyInfoClient.get();
    }

    public AsyncContactsClient contacts() {
        return this.contactsClient.get();
    }

    public AsyncCreditNotesClient creditNotes() {
        return this.creditNotesClient.get();
    }

    public AsyncScopesClient scopes() {
        return this.scopesClient.get();
    }

    public AsyncDeleteAccountClient deleteAccount() {
        return this.deleteAccountClient.get();
    }

    public AsyncEmployeesClient employees() {
        return this.employeesClient.get();
    }

    public AsyncExpensesClient expenses() {
        return this.expensesClient.get();
    }

    public AsyncFieldMappingClient fieldMapping() {
        return this.fieldMappingClient.get();
    }

    public AsyncGeneralLedgerTransactionsClient generalLedgerTransactions() {
        return this.generalLedgerTransactionsClient.get();
    }

    public AsyncGenerateKeyClient generateKey() {
        return this.generateKeyClient.get();
    }

    public AsyncIncomeStatementsClient incomeStatements() {
        return this.incomeStatementsClient.get();
    }

    public AsyncInvoicesClient invoices() {
        return this.invoicesClient.get();
    }

    public AsyncIssuesClient issues() {
        return this.issuesClient.get();
    }

    public AsyncItemsClient items() {
        return this.itemsClient.get();
    }

    public AsyncJournalEntriesClient journalEntries() {
        return this.journalEntriesClient.get();
    }

    public AsyncLinkTokenClient linkToken() {
        return this.linkTokenClient.get();
    }

    public AsyncLinkedAccountsClient linkedAccounts() {
        return this.linkedAccountsClient.get();
    }

    public AsyncPassthroughClient passthrough() {
        return this.passthroughClient.get();
    }

    public AsyncPaymentMethodsClient paymentMethods() {
        return this.paymentMethodsClient.get();
    }

    public AsyncPaymentTermsClient paymentTerms() {
        return this.paymentTermsClient.get();
    }

    public AsyncPaymentsClient payments() {
        return this.paymentsClient.get();
    }

    public AsyncPhoneNumbersClient phoneNumbers() {
        return this.phoneNumbersClient.get();
    }

    public AsyncProjectsClient projects() {
        return this.projectsClient.get();
    }

    public AsyncPurchaseOrdersClient purchaseOrders() {
        return this.purchaseOrdersClient.get();
    }

    public AsyncRegenerateKeyClient regenerateKey() {
        return this.regenerateKeyClient.get();
    }

    public AsyncSyncStatusClient syncStatus() {
        return this.syncStatusClient.get();
    }

    public AsyncForceResyncClient forceResync() {
        return this.forceResyncClient.get();
    }

    public AsyncTaxRatesClient taxRates() {
        return this.taxRatesClient.get();
    }

    public AsyncTrackingCategoriesClient trackingCategories() {
        return this.trackingCategoriesClient.get();
    }

    public AsyncTransactionsClient transactions() {
        return this.transactionsClient.get();
    }

    public AsyncVendorCreditsClient vendorCredits() {
        return this.vendorCreditsClient.get();
    }

    public AsyncWebhookReceiversClient webhookReceivers() {
        return this.webhookReceiversClient.get();
    }
}
