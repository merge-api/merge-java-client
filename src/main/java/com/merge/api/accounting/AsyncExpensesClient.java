/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.accounting;

import com.merge.api.accounting.types.Expense;
import com.merge.api.accounting.types.ExpenseEndpointRequest;
import com.merge.api.accounting.types.ExpenseResponse;
import com.merge.api.accounting.types.ExpensesLinesRemoteFieldClassesListRequest;
import com.merge.api.accounting.types.ExpensesListRequest;
import com.merge.api.accounting.types.ExpensesRemoteFieldClassesListRequest;
import com.merge.api.accounting.types.ExpensesRetrieveRequest;
import com.merge.api.accounting.types.MetaResponse;
import com.merge.api.accounting.types.RemoteFieldClass;
import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import com.merge.api.core.SyncPagingIterable;
import java.util.concurrent.CompletableFuture;

public class AsyncExpensesClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawExpensesClient rawClient;

    public AsyncExpensesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawExpensesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawExpensesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Expense</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Expense>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Expense</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Expense>> list(ExpensesListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Expense</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<Expense>> list(
            ExpensesListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates an <code>Expense</code> object with the given values.
     */
    public CompletableFuture<ExpenseResponse> create(ExpenseEndpointRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Creates an <code>Expense</code> object with the given values.
     */
    public CompletableFuture<ExpenseResponse> create(ExpenseEndpointRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns an <code>Expense</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Expense> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns an <code>Expense</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Expense> retrieve(String id, ExpensesRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns an <code>Expense</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Expense> retrieve(
            String id, ExpensesRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> linesRemoteFieldClassesList() {
        return this.rawClient.linesRemoteFieldClassesList().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> linesRemoteFieldClassesList(
            ExpensesLinesRemoteFieldClassesListRequest request) {
        return this.rawClient.linesRemoteFieldClassesList(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> linesRemoteFieldClassesList(
            ExpensesLinesRemoteFieldClassesListRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .linesRemoteFieldClassesList(request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Expense</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve() {
        return this.rawClient.metaPostRetrieve().thenApply(response -> response.body());
    }

    /**
     * Returns metadata for <code>Expense</code> POSTs.
     */
    public CompletableFuture<MetaResponse> metaPostRetrieve(RequestOptions requestOptions) {
        return this.rawClient.metaPostRetrieve(requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList() {
        return this.rawClient.remoteFieldClassesList().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList(
            ExpensesRemoteFieldClassesListRequest request) {
        return this.rawClient.remoteFieldClassesList(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>RemoteFieldClass</code> objects.
     */
    public CompletableFuture<SyncPagingIterable<RemoteFieldClass>> remoteFieldClassesList(
            ExpensesRemoteFieldClassesListRequest request, RequestOptions requestOptions) {
        return this.rawClient.remoteFieldClassesList(request, requestOptions).thenApply(response -> response.body());
    }
}
