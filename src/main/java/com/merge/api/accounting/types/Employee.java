/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.accounting.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.merge.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Employee.Builder.class)
public final class Employee {
    private final Optional<String> id;

    private final Optional<String> remoteId;

    private final Optional<OffsetDateTime> createdAt;

    private final Optional<OffsetDateTime> modifiedAt;

    private final Optional<String> firstName;

    private final Optional<String> lastName;

    private final Optional<Boolean> isContractor;

    private final Optional<String> employeeNumber;

    private final Optional<String> emailAddress;

    private final Optional<EmployeeCompany> company;

    private final EmployeeStatus status;

    private final Optional<Boolean> remoteWasDeleted;

    private final Optional<Map<String, JsonNode>> fieldMappings;

    private final Optional<List<RemoteData>> remoteData;

    private final Map<String, Object> additionalProperties;

    private Employee(
            Optional<String> id,
            Optional<String> remoteId,
            Optional<OffsetDateTime> createdAt,
            Optional<OffsetDateTime> modifiedAt,
            Optional<String> firstName,
            Optional<String> lastName,
            Optional<Boolean> isContractor,
            Optional<String> employeeNumber,
            Optional<String> emailAddress,
            Optional<EmployeeCompany> company,
            EmployeeStatus status,
            Optional<Boolean> remoteWasDeleted,
            Optional<Map<String, JsonNode>> fieldMappings,
            Optional<List<RemoteData>> remoteData,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.remoteId = remoteId;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.firstName = firstName;
        this.lastName = lastName;
        this.isContractor = isContractor;
        this.employeeNumber = employeeNumber;
        this.emailAddress = emailAddress;
        this.company = company;
        this.status = status;
        this.remoteWasDeleted = remoteWasDeleted;
        this.fieldMappings = fieldMappings;
        this.remoteData = remoteData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    /**
     * @return The third-party API ID of the matching object.
     */
    @JsonProperty("remote_id")
    public Optional<String> getRemoteId() {
        return remoteId;
    }

    /**
     * @return The datetime that this object was created by Merge.
     */
    @JsonProperty("created_at")
    public Optional<OffsetDateTime> getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The datetime that this object was modified by Merge.
     */
    @JsonProperty("modified_at")
    public Optional<OffsetDateTime> getModifiedAt() {
        return modifiedAt;
    }

    /**
     * @return The employee's first name.
     */
    @JsonProperty("first_name")
    public Optional<String> getFirstName() {
        return firstName;
    }

    /**
     * @return The employee's last name.
     */
    @JsonProperty("last_name")
    public Optional<String> getLastName() {
        return lastName;
    }

    /**
     * @return <code>True</code> if the employee is a contractor, <code>False</code> if not.
     */
    @JsonProperty("is_contractor")
    public Optional<Boolean> getIsContractor() {
        return isContractor;
    }

    /**
     * @return The employee's internal identification number.
     */
    @JsonProperty("employee_number")
    public Optional<String> getEmployeeNumber() {
        return employeeNumber;
    }

    /**
     * @return The employee's email address.
     */
    @JsonProperty("email_address")
    public Optional<String> getEmailAddress() {
        return emailAddress;
    }

    /**
     * @return The subsidiary that the employee belongs to.
     */
    @JsonProperty("company")
    public Optional<EmployeeCompany> getCompany() {
        return company;
    }

    /**
     * @return The employee's status in the accounting system.
     * <ul>
     * <li><code>ACTIVE</code> - ACTIVE</li>
     * <li><code>INACTIVE</code> - INACTIVE</li>
     * </ul>
     */
    @JsonProperty("status")
    public EmployeeStatus getStatus() {
        return status;
    }

    /**
     * @return Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. <a href="https://docs.merge.dev/integrations/hris/supported-features/">Learn more</a>.
     */
    @JsonProperty("remote_was_deleted")
    public Optional<Boolean> getRemoteWasDeleted() {
        return remoteWasDeleted;
    }

    @JsonProperty("field_mappings")
    public Optional<Map<String, JsonNode>> getFieldMappings() {
        return fieldMappings;
    }

    @JsonProperty("remote_data")
    public Optional<List<RemoteData>> getRemoteData() {
        return remoteData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Employee && equalTo((Employee) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Employee other) {
        return id.equals(other.id)
                && remoteId.equals(other.remoteId)
                && createdAt.equals(other.createdAt)
                && modifiedAt.equals(other.modifiedAt)
                && firstName.equals(other.firstName)
                && lastName.equals(other.lastName)
                && isContractor.equals(other.isContractor)
                && employeeNumber.equals(other.employeeNumber)
                && emailAddress.equals(other.emailAddress)
                && company.equals(other.company)
                && status.equals(other.status)
                && remoteWasDeleted.equals(other.remoteWasDeleted)
                && fieldMappings.equals(other.fieldMappings)
                && remoteData.equals(other.remoteData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.remoteId,
                this.createdAt,
                this.modifiedAt,
                this.firstName,
                this.lastName,
                this.isContractor,
                this.employeeNumber,
                this.emailAddress,
                this.company,
                this.status,
                this.remoteWasDeleted,
                this.fieldMappings,
                this.remoteData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static StatusStage builder() {
        return new Builder();
    }

    public interface StatusStage {
        /**
         * The employee's status in the accounting system.
         *
         * * `ACTIVE` - ACTIVE
         * * `INACTIVE` - INACTIVE
         */
        _FinalStage status(@NotNull EmployeeStatus status);

        Builder from(Employee other);
    }

    public interface _FinalStage {
        Employee build();

        _FinalStage id(Optional<String> id);

        _FinalStage id(String id);

        /**
         * <p>The third-party API ID of the matching object.</p>
         */
        _FinalStage remoteId(Optional<String> remoteId);

        _FinalStage remoteId(String remoteId);

        /**
         * <p>The datetime that this object was created by Merge.</p>
         */
        _FinalStage createdAt(Optional<OffsetDateTime> createdAt);

        _FinalStage createdAt(OffsetDateTime createdAt);

        /**
         * <p>The datetime that this object was modified by Merge.</p>
         */
        _FinalStage modifiedAt(Optional<OffsetDateTime> modifiedAt);

        _FinalStage modifiedAt(OffsetDateTime modifiedAt);

        /**
         * <p>The employee's first name.</p>
         */
        _FinalStage firstName(Optional<String> firstName);

        _FinalStage firstName(String firstName);

        /**
         * <p>The employee's last name.</p>
         */
        _FinalStage lastName(Optional<String> lastName);

        _FinalStage lastName(String lastName);

        /**
         * <p><code>True</code> if the employee is a contractor, <code>False</code> if not.</p>
         */
        _FinalStage isContractor(Optional<Boolean> isContractor);

        _FinalStage isContractor(Boolean isContractor);

        /**
         * <p>The employee's internal identification number.</p>
         */
        _FinalStage employeeNumber(Optional<String> employeeNumber);

        _FinalStage employeeNumber(String employeeNumber);

        /**
         * <p>The employee's email address.</p>
         */
        _FinalStage emailAddress(Optional<String> emailAddress);

        _FinalStage emailAddress(String emailAddress);

        /**
         * <p>The subsidiary that the employee belongs to.</p>
         */
        _FinalStage company(Optional<EmployeeCompany> company);

        _FinalStage company(EmployeeCompany company);

        /**
         * <p>Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. <a href="https://docs.merge.dev/integrations/hris/supported-features/">Learn more</a>.</p>
         */
        _FinalStage remoteWasDeleted(Optional<Boolean> remoteWasDeleted);

        _FinalStage remoteWasDeleted(Boolean remoteWasDeleted);

        _FinalStage fieldMappings(Optional<Map<String, JsonNode>> fieldMappings);

        _FinalStage fieldMappings(Map<String, JsonNode> fieldMappings);

        _FinalStage remoteData(Optional<List<RemoteData>> remoteData);

        _FinalStage remoteData(List<RemoteData> remoteData);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements StatusStage, _FinalStage {
        private EmployeeStatus status;

        private Optional<List<RemoteData>> remoteData = Optional.empty();

        private Optional<Map<String, JsonNode>> fieldMappings = Optional.empty();

        private Optional<Boolean> remoteWasDeleted = Optional.empty();

        private Optional<EmployeeCompany> company = Optional.empty();

        private Optional<String> emailAddress = Optional.empty();

        private Optional<String> employeeNumber = Optional.empty();

        private Optional<Boolean> isContractor = Optional.empty();

        private Optional<String> lastName = Optional.empty();

        private Optional<String> firstName = Optional.empty();

        private Optional<OffsetDateTime> modifiedAt = Optional.empty();

        private Optional<OffsetDateTime> createdAt = Optional.empty();

        private Optional<String> remoteId = Optional.empty();

        private Optional<String> id = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Employee other) {
            id(other.getId());
            remoteId(other.getRemoteId());
            createdAt(other.getCreatedAt());
            modifiedAt(other.getModifiedAt());
            firstName(other.getFirstName());
            lastName(other.getLastName());
            isContractor(other.getIsContractor());
            employeeNumber(other.getEmployeeNumber());
            emailAddress(other.getEmailAddress());
            company(other.getCompany());
            status(other.getStatus());
            remoteWasDeleted(other.getRemoteWasDeleted());
            fieldMappings(other.getFieldMappings());
            remoteData(other.getRemoteData());
            return this;
        }

        /**
         * The employee's status in the accounting system.
         *
         * * `ACTIVE` - ACTIVE
         * * `INACTIVE` - INACTIVE<p>The employee's status in the accounting system.</p>
         * <ul>
         * <li><code>ACTIVE</code> - ACTIVE</li>
         * <li><code>INACTIVE</code> - INACTIVE</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("status")
        public _FinalStage status(@NotNull EmployeeStatus status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        public _FinalStage remoteData(List<RemoteData> remoteData) {
            this.remoteData = Optional.ofNullable(remoteData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "remote_data", nulls = Nulls.SKIP)
        public _FinalStage remoteData(Optional<List<RemoteData>> remoteData) {
            this.remoteData = remoteData;
            return this;
        }

        @java.lang.Override
        public _FinalStage fieldMappings(Map<String, JsonNode> fieldMappings) {
            this.fieldMappings = Optional.ofNullable(fieldMappings);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "field_mappings", nulls = Nulls.SKIP)
        public _FinalStage fieldMappings(Optional<Map<String, JsonNode>> fieldMappings) {
            this.fieldMappings = fieldMappings;
            return this;
        }

        /**
         * <p>Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. <a href="https://docs.merge.dev/integrations/hris/supported-features/">Learn more</a>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage remoteWasDeleted(Boolean remoteWasDeleted) {
            this.remoteWasDeleted = Optional.ofNullable(remoteWasDeleted);
            return this;
        }

        /**
         * <p>Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. <a href="https://docs.merge.dev/integrations/hris/supported-features/">Learn more</a>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "remote_was_deleted", nulls = Nulls.SKIP)
        public _FinalStage remoteWasDeleted(Optional<Boolean> remoteWasDeleted) {
            this.remoteWasDeleted = remoteWasDeleted;
            return this;
        }

        /**
         * <p>The subsidiary that the employee belongs to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage company(EmployeeCompany company) {
            this.company = Optional.ofNullable(company);
            return this;
        }

        /**
         * <p>The subsidiary that the employee belongs to.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "company", nulls = Nulls.SKIP)
        public _FinalStage company(Optional<EmployeeCompany> company) {
            this.company = company;
            return this;
        }

        /**
         * <p>The employee's email address.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage emailAddress(String emailAddress) {
            this.emailAddress = Optional.ofNullable(emailAddress);
            return this;
        }

        /**
         * <p>The employee's email address.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "email_address", nulls = Nulls.SKIP)
        public _FinalStage emailAddress(Optional<String> emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * <p>The employee's internal identification number.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage employeeNumber(String employeeNumber) {
            this.employeeNumber = Optional.ofNullable(employeeNumber);
            return this;
        }

        /**
         * <p>The employee's internal identification number.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "employee_number", nulls = Nulls.SKIP)
        public _FinalStage employeeNumber(Optional<String> employeeNumber) {
            this.employeeNumber = employeeNumber;
            return this;
        }

        /**
         * <p><code>True</code> if the employee is a contractor, <code>False</code> if not.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage isContractor(Boolean isContractor) {
            this.isContractor = Optional.ofNullable(isContractor);
            return this;
        }

        /**
         * <p><code>True</code> if the employee is a contractor, <code>False</code> if not.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "is_contractor", nulls = Nulls.SKIP)
        public _FinalStage isContractor(Optional<Boolean> isContractor) {
            this.isContractor = isContractor;
            return this;
        }

        /**
         * <p>The employee's last name.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage lastName(String lastName) {
            this.lastName = Optional.ofNullable(lastName);
            return this;
        }

        /**
         * <p>The employee's last name.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "last_name", nulls = Nulls.SKIP)
        public _FinalStage lastName(Optional<String> lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * <p>The employee's first name.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage firstName(String firstName) {
            this.firstName = Optional.ofNullable(firstName);
            return this;
        }

        /**
         * <p>The employee's first name.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "first_name", nulls = Nulls.SKIP)
        public _FinalStage firstName(Optional<String> firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * <p>The datetime that this object was modified by Merge.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage modifiedAt(OffsetDateTime modifiedAt) {
            this.modifiedAt = Optional.ofNullable(modifiedAt);
            return this;
        }

        /**
         * <p>The datetime that this object was modified by Merge.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "modified_at", nulls = Nulls.SKIP)
        public _FinalStage modifiedAt(Optional<OffsetDateTime> modifiedAt) {
            this.modifiedAt = modifiedAt;
            return this;
        }

        /**
         * <p>The datetime that this object was created by Merge.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = Optional.ofNullable(createdAt);
            return this;
        }

        /**
         * <p>The datetime that this object was created by Merge.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "created_at", nulls = Nulls.SKIP)
        public _FinalStage createdAt(Optional<OffsetDateTime> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * <p>The third-party API ID of the matching object.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage remoteId(String remoteId) {
            this.remoteId = Optional.ofNullable(remoteId);
            return this;
        }

        /**
         * <p>The third-party API ID of the matching object.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "remote_id", nulls = Nulls.SKIP)
        public _FinalStage remoteId(Optional<String> remoteId) {
            this.remoteId = remoteId;
            return this;
        }

        @java.lang.Override
        public _FinalStage id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public _FinalStage id(Optional<String> id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        public Employee build() {
            return new Employee(
                    id,
                    remoteId,
                    createdAt,
                    modifiedAt,
                    firstName,
                    lastName,
                    isContractor,
                    employeeNumber,
                    emailAddress,
                    company,
                    status,
                    remoteWasDeleted,
                    fieldMappings,
                    remoteData,
                    additionalProperties);
        }
    }
}
