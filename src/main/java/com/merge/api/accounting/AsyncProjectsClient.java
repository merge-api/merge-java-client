/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.merge.api.accounting;

import com.merge.api.accounting.types.PaginatedProjectList;
import com.merge.api.accounting.types.Project;
import com.merge.api.accounting.types.ProjectsListRequest;
import com.merge.api.accounting.types.ProjectsRetrieveRequest;
import com.merge.api.core.ClientOptions;
import com.merge.api.core.RequestOptions;
import java.util.concurrent.CompletableFuture;

public class AsyncProjectsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawProjectsClient rawClient;

    public AsyncProjectsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawProjectsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawProjectsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public CompletableFuture<PaginatedProjectList> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public CompletableFuture<PaginatedProjectList> list(ProjectsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of <code>Project</code> objects.
     */
    public CompletableFuture<PaginatedProjectList> list(ProjectsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Project> retrieve(String id) {
        return this.rawClient.retrieve(id).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Project> retrieve(String id, ProjectsRetrieveRequest request) {
        return this.rawClient.retrieve(id, request).thenApply(response -> response.body());
    }

    /**
     * Returns a <code>Project</code> object with the given <code>id</code>.
     */
    public CompletableFuture<Project> retrieve(
            String id, ProjectsRetrieveRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieve(id, request, requestOptions).thenApply(response -> response.body());
    }
}
